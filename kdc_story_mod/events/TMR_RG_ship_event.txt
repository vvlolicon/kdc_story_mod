namespace = RG_ship
#制造R型星门时限制星门组队
ship_event = {
	id = RG_ship.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_size = nanitecrop_gate
	}
	immediate = {
		create_fleet = {
			name = "NAME_RG"
			effect = {
				set_owner = root.owner
				set_location = root.fleet
				create_ship = { 
					random_existing_design = nanitecrop_gate
				}
				set_fleet_flag = RG_ship
			}
			settings = {
				can_change_composition = no
				can_change_leader = no
				spawn_debris = no
				ai_ignore_strength = yes
			}
		}
		if = {
			limit = {
				exists = fleet
				fleet = { num_ships <= 1 }
			}
			fleet = { delete_fleet = { target = this destroy_template = yes }}
		}
		delete_ship = this
	}
}

#展开R型星门
country_event = {
	id = RG_ship.2
	title = RG_ship.2.name
	desc = RG_ship.2.desc
	is_triggered_only = yes
	location = from.solar_system
	trackable = yes
	picture = GFX_evt_no_video_feed_room

	trigger = {
		NAND = { 
			has_country_flag = R_gate_on
			has_active_event = {
				RG_ship.2
				RG_ship.3
				RG_ship.4
				RG_ship.5
			}
		}
		from = {
			solar_system = {
				NOT = { any_fleet_in_system = {
					# 不能有敌对舰队
					owner = { is_hostile = prevprev.from }
					any_owned_ship = { OR = {
						is_ship_class = shipclass_military 
						is_ship_class = shipclass_military_station
					}}
				}}
				# 星系内不能有其他星门
				NOT = { any_system_megastructure = { OR = {
					is_megastructure_type = Rgate_opened
					is_megastructure_type = Rgate_closed
					is_megastructure_type = uf_mobile_portal
					is_megastructure_type = uf_mobile_portal_temp
					is_megastructure_type = gateway_final
					is_megastructure_type = gateway_restored
				}}}
			}
			any_owned_ship = {
				is_ship_size = nanitecrop_gate
			}
		}
	}
	immediate = {
		set_country_flag = R_gate_on
		if = {
			limit = { 
				any_owned_ship = { is_ship_size = nanitecrop_gate }
			 }
			from.solar_system = { save_event_target_as = Rgate_system }
		}
	}
	after = {
		remove_country_flag = R_gate_on
	}
	option = {#召唤星门#
		name = RG_ship.2.a
		custom_tooltip = RG_ship.2.a.tooltip
		hidden_effect = { 
			event_target:Rgate_system = {
				spawn_megastructure = {
					type = Rgate_closed
					owner = root
					coords_from = from
					orbit_angle = 0
					orbit_distance = 0
					init_effect = { 
						upgrade_megastructure_to = Rgate_opened
						save_event_target_as = RG_portal
						set_megastructure_flag = RG_portal@ROOT
					}
				}
				create_fleet = {
					name = "NAME_RG"
					effect = {
						set_owner = root
						set_location = event_target:RG_portal
						create_ship = {
							design = "NAME_R_Gate"
							graphical_culture = owner
							prefix = yes
						}
						create_ship = {
							design = "NAME_R_Gate2"
							graphical_culture = owner
							prefix = yes
							effect = { set_disabled = yes }
						}
						set_fleet_flag = r_gate_entity_fleet
					}
					settings = {
						can_change_composition = no
						can_change_leader = no
						can_disband = no
						can_upgrade = no
						spawn_debris = no
						ai_ignore_strength = yes
					}
				}
			}
		}
	}

	option = {#取消召唤星门#
		name = RG_ship.2.b
		custom_tooltip = RG_ship.2.b.tooltip
		hidden_effect = {
			create_fleet = {
				name = "NAME_RG"
				effect = {
					set_owner = root.owner
					set_location = root.from
					create_ship = {
						random_existing_design = nanitecrop_gate
						graphical_culture = owner
						prefix = yes
					}
					set_fleet_flag = RG_ship
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
			from = { delete_fleet = { target = this destroy_template = yes } }
		}
	}

	option = {#删除舰队#
		name = RG_ship.2.c
		custom_tooltip = RG_ship.2.c.tooltip
	}
}

#已经存在星门#
country_event = {
	id = RG_ship.3
	title = RG_ship.3.name
	desc = RG_ship.3.desc
	is_triggered_only = yes
	location = from.solar_system
	trackable = yes
	picture = GFX_evt_no_video_feed_room

	trigger = {
		NOR = { 
			has_country_flag = R_gate_on
			has_active_event = {
				RG_ship.2
				RG_ship.3
				RG_ship.4
				RG_ship.5
			}
		}
		from = {
			is_in_combat = no
			has_fleet_flag = RG_ship
			any_owned_ship = { is_ship_size = nanitecrop_gate }
			solar_system = { any_system_megastructure = { OR = {
				is_megastructure_type = Rgate_opened
				is_megastructure_type = Rgate_closed
				is_megastructure_type = uf_mobile_portal
				is_megastructure_type = uf_mobile_portal_temp
				is_megastructure_type = gateway_final
				is_megastructure_type = gateway_restored
			}}}
		}
	}

	option = {
		name = OK
		custom_tooltip = RG_ship.2.b.tooltip
		hidden_effect = { 
			create_fleet = {	
				name = "NAME_RG"
				effect = {
					set_owner = root
					set_location = root.from
					create_ship = {
						random_existing_design = nanitecrop_gate
						graphical_culture = owner
						prefix = yes
					}
					set_fleet_flag = RG_ship
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
			# from = { solar_system = { megastructure = { remove_megastructure_flag = RG_portal@ROOT }	}}
		}
	}
}

# 部署失败提示：有其他敌对舰队在此星系
country_event = {
	id = RG_ship.4
	title = RG_ship.3.name
	desc = RG_ship.4.desc
	is_triggered_only = yes
	location = from.solar_system
	trackable = yes
	picture = GFX_evt_no_video_feed_room

	trigger = {
		NOR = { 
			has_country_flag = R_gate_on 
			has_active_event = {
				RG_ship.2
				RG_ship.3
				RG_ship.4
				RG_ship.5
			}
		}
		from = { 
			OR = {
				is_in_combat = yes
				solar_system = {
					any_fleet_in_system = {
						# 有敌对舰队
						owner = { is_hostile = prevprev.from }
						any_owned_ship = { OR = {
							is_ship_class = shipclass_military 
							is_ship_class = shipclass_military_station
						}}
					}
				}
			}
			has_fleet_flag = RG_ship
			any_owned_ship = { is_ship_size = nanitecrop_gate }
		}
	}

	immediate = {
		set_country_flag = R_gate_on
		from.solar_system = {
			save_event_target_as = portal_system
		}
	}

	after = { remove_country_flag = R_gate_on }

	option = {
		name = OK
		custom_tooltip = RG_ship.2.b.tooltip
		hidden_effect = { 
			create_fleet = {
				name = "NAME_RG"
				effect = {
					set_owner = root
					set_location = root.from
					create_ship = {
						random_existing_design = nanitecrop_gate
						graphical_culture = owner
						prefix = yes
					}
					set_fleet_flag = RG_ship
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
			from = { delete_fleet = { target = this destroy_template = yes }}
		}
	}

}

country_event = {
	id = RG_ship.5
	title = RG_ship.3.name
	desc = RG_ship.5.desc
	is_triggered_only = yes
	location = from.solar_system
	trackable = yes
	picture = GFX_evt_no_video_feed_room

	trigger = {
		OR = { 
			has_country_flag = R_gate_on 
			has_active_event = {
				RG_ship.2
				RG_ship.3
				RG_ship.4
				RG_ship.5
			}
		}
	}

	immediate = {
		set_country_flag = R_gate_on
		from.solar_system = {
			save_event_target_as = portal_system
		}
	}

	after = { remove_country_flag = R_gate_on }

	option = {
		name = OK
		custom_tooltip = RG_ship.2.b.tooltip
		hidden_effect = { 
			create_fleet = {
				name = "NAME_RG"
				effect = {
					set_owner = root.owner
					set_location = root.from
					create_ship = {
						random_existing_design = nanitecrop_gate
						graphical_culture = owner
						prefix = yes
					}
					set_fleet_flag = RG_ship
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
			from = { delete_fleet = { target = this destroy_template = yes }}
		}
	}

}

# 传送门实体被摧毁，移除传送门
country_event = {
	id = RG_ship.6
	title = RG_ship.6.name
	desc = RG_ship.6.desc
	picture = GFX_evt_exploding_ship
	show_sound = event_ship_explosion
	is_triggered_only = yes
	location = fromfrom

	trigger = { 
		fromfrom = { is_ship_size = r_gate_entity }
	}

	immediate = {
		fromfrom.solar_system = {
			save_event_target_as = r_gate_system
			random_system_megastructure = {
				limit = { is_megastructure_type = Rgate_opened }
				remove_megastructure = this
			}
			every_fleet_in_system = {
				limit = { has_fleet_flag = r_gate_entity_fleet }
				delete_fleet = { target = this destroy_template = yes }
			}
		}
	}

	option = {
		name = GODDAMNIT
	}
}

# 使用说明书
country_event = {
	id = RG_ship.7
	title = RG_ship.7.name
	desc = RG_ship.7.desc
	is_triggered_only = yes
	picture = GFX_evt_no_video_feed_room

	trigger = {
		last_increased_tech = tech_R_gateway
	}

	option = {
		name = OK
	}
}

# system_event = {#时限到了，删除星门#
# 	id = RG_ship.9
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		random_system_megastructure = {
# 			limit = { is_megastructure_type = Rgate_opened }
# 			remove_megastructure = this
# 		}
# 		random_fleet_in_system = {
# 			limit = { has_fleet_flag = RG_ship }
# 			delete_fleet = { target = this destroy_template = yes }
# 		}
# 	}
# }

#星门打包成船#
country_event = {
	id = RG_ship.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = { is_megastructure_type = Rgate_closed }
	}

	immediate = {
		from = { 
			create_fleet = {
				name = "NAME_RG"
				effect = {
					set_owner = root
					set_location = prev
					create_ship = {
						random_existing_design = nanitecrop_gate
						graphical_culture = owner
						prefix = yes
					}
					set_fleet_flag = RG_ship
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
			remove_megastructure = this 
			solar_system = {
				random_fleet_in_system = {
					limit = { has_fleet_flag = r_gate_entity_fleet }
					delete_fleet = { target = this destroy_template = yes }
				}
			}
		}
	}
}


# 月检，如果棱镜核心在别人家里展开而战争打完了或没有通行权就收回成舰队
country_event = {
	id = RG_ship.12
	hide_window = yes
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		every_owned_fleet = {
			limit = { has_fleet_flag = RG_ship }
			solar_system = { if = {
				limit = { 
					exists = space_owner
					space_owner = { 
						NOT = { is_same_value = root }
						has_closed_borders = root
						NOT = { is_at_war_with = root }
					}
				}
				random_system_megastructure = {
					limit = { is_megastructure_type = Rgate_opened }
					remove_megastructure = this
				}
				prev = {
					save_event_target_as = RG_entity
					create_fleet = {
						name = "NAME_RG"
						effect = {
							set_owner = root
							set_location = event_target:RG_entity
							create_ship = {
								random_existing_design = nanitecrop_gate
								graphical_culture = owner
								prefix = yes
							}
							set_fleet_flag = RG_ship
							}
						settings = {
							can_change_composition = no
							can_change_leader = no
							spawn_debris = no
							ai_ignore_strength = yes
						}
					}
					delete_fleet = { target = this destroy_template = yes }
				}
			}}
		}
	}
}

event = {
	id = RG_ship.13
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_megastructure = { is_megastructure_type = Rgate_opened }
	}

	immediate = {
		random_megastructure = {
			limit = { is_megastructure_type = Rgate_opened }
			random_country = {
				limit = { PREV = { has_megastructure_flag = RG_portal@PREV }}
				country_event = { id = RG_ship.14 days = 1 }
			}
		}
	}
}

# 月检+读档，检测空间站是否被蠢驴移除
country_event = {
	id = RG_ship.14
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_technology = tech_R_gateway
	}

	immediate = {
		every_megastructure = {
			limit = { 
				is_megastructure_type = Rgate_opened 
				has_megastructure_flag = RG_portal@root
			}
			set_owner = root
			if = {
				limit = { solar_system = { OR = {
					NOT = { any_fleet_in_system = {
						has_fleet_flag = r_gate_entity_fleet
						owner = { is_same_value = root }
					}}
				}}}
				create_fleet = {
					name = "NAME_R_Gate"
					effect = {
						set_owner = root
						set_location = { target = event_target:RG_portal }
						create_ship = {
							design = "NAME_R_Gate"
							graphical_culture = owner
							prefix = yes
						}
						create_ship = {
							design = "NAME_R_Gate2"
							graphical_culture = owner
							prefix = yes
							effect = { set_disabled = yes }
						}
						set_fleet_flag = r_gate_entity_fleet
					}
					settings = {
						can_change_composition = no
						can_change_leader = no
						can_disband = no
						can_upgrade = no
						spawn_debris = no
						ai_ignore_strength = yes
					}
				}
			}
		}
	}
}