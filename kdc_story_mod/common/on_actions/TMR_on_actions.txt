# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		nanitebombard.1
	}

}


VOP_on_monthly_pulse_country = {
	events = {
		RG_ship.12
		RG_ship.14
	}
}


on_ship_built = {
	events = {
		RG_ship.1
	}
}

on_entering_battle = {
	events = {
	}
}

on_fleet_disbanded = {
	events = {
		RG_ship.5
		RG_ship.4
		RG_ship.3
		
		RG_ship.2 # 此触发必须留到最后
		gatebuildercore.1002
	}
}

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
		# RG_ship.8
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		gatebuildercore.1003
		RG_ship.6
		nanitemega.1000
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		RG_ship.10
		gatebuildercore.1000
		gatebuildercore.1001
		nanitemega.2 # 星球船坞
		nanitemega.3 # 星球船坞
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		nanitemega.1 # 星球船坞
	}
}

on_single_player_save_game_load = {
	events = {
		RG_ship.13
		tmr_check.1
	}
}
on_game_start = {
	events = {
		tmr_check.1
	}
}

on_tech_increased = {
	events = {
		gray_story.3
		gray_story.17
		RG_ship.7
		naniteship.1000
	}
}

# Triggers event when ship enters a system. It's usually better to use on_entering_system_first_time or on_entering_system_fleet
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	# random_events = {
	# 	19 = 0
	# 	1 = gray_story.6
	# }
}

# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		gray_story.7
	}
}

# A country has gained a surveyed status on a planet. Happens after "on_survey" if a science ship surveyed a planet.
# Root = Country
# From = system
# FromFrom = Fleet of the science ship that surveyed it, if any
on_system_survey = {
	events = {
		gray_story.8
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey_planet = {
	events = {
		gray_story.12
	}
}

VOP_on_yearly_pulse_country = {
	events = {
		gray_story.3
	}
}